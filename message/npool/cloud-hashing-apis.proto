syntax = "proto3";

package cloud.hashing.apis.v1;

option go_package = "github.com/NpoolPlatform/cloud-hashing-apis/message/npool";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

// Cloud Hashing Goods
service CloudHashingApis {
    rpc Version (google.protobuf.Empty) returns (VersionResponse){
        option (google.api.http) = {
            post: "/version"
            body: "*"
        };
    }

    rpc GetGoodsDetail(GetGoodsDetailRequest) returns (GetGoodsDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/goods/detail"
            body: "*"
        };
    }
    rpc GetGoodDetail(GetGoodDetailRequest) returns (GetGoodDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/detail"
            body: "*"
        };
    }
    rpc GetRecommendGoodsDetailByApp(GetRecommendGoodsDetailByAppRequest) returns (GetRecommendGoodsDetailByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/recommend/goods/detail/by/app"
            body: "*"
        };
    }

    rpc SubmitOrder(SubmitOrderRequest) returns (SubmitOrderResponse) {
        option (google.api.http) = {
            post: "/v1/submit/order"
            body: "*"
        };
    }
    rpc CreateOrderPayment(CreateOrderPaymentRequest) returns (CreateOrderPaymentResponse) {
        option (google.api.http) = {
            post: "/v1/create/order/payment"
            body: "*"
        };
    }

    rpc GetOrderDetail(GetOrderDetailRequest) returns (GetOrderDetailResponse) {
        option (google.api.http) = {
            post: "/v1/get/order/detail"
            body: "*"
        };
    }

    rpc GetOrdersDetailByAppUser(GetOrdersDetailByAppUserRequest) returns (GetOrdersDetailByAppUserResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/detail/by/app/user"
            body: "*"
        };
    }
    rpc GetOrdersDetailByApp(GetOrdersDetailByAppRequest) returns (GetOrdersDetailByAppResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/detail/by/app"
            body: "*"
        };
    }
    rpc GetOrdersDetailByGood(GetOrdersDetailByGoodRequest) returns (GetOrdersDetailByGoodResponse) {
        option (google.api.http) = {
            post: "/v1/get/orders/detail/by/good"
            body: "*"
        };
    }

    rpc Signup(SignupRequest) returns (SignupResponse) {
        option (google.api.http) = {
            post: "/v1/signup"
            body: "*"
        };
    }

    rpc GetMyInvitations(GetMyInvitationsRequest) returns (GetMyInvitationsResponse) {
        option (google.api.http) = {
            post: "/v1/get/my/invitations"
            body: "*"
        };
    }
    rpc GetMyDirectInvitations(GetMyDirectInvitationsRequest) returns (GetMyDirectInvitationsResponse) {
        option (google.api.http) = {
            post: "/v1/get/my/direct/invitations"
            body: "*"
        };
    }

    rpc GetKycReviews(GetKycReviewsRequest) returns (GetKycReviewsResponse) {
        option (google.api.http) = {
            post: "/v1/get/kyc/reviews"
            body: "*"
        };
    }
    rpc GetGoodReviews(GetGoodReviewsRequest) returns (GetGoodReviewsResponse) {
        option (google.api.http) = {
            post: "/v1/get/good/reviews"
            body: "*"
        };
    }
}

message PageInfo {
    int32 PageIndex = 100;
    int32 PageSize = 101;
}

// Request body and response
message VersionResponse {
    string Info = 200;
}

message VendorLocationInfo {
    string ID = 300;
    string Country = 301;
    string Province = 302;
    string City = 303;
    string Address = 304;
}

message TargetAreaInfo {
    string ID = 1000;
    string Continent = 1001;
    string Country = 1002;
}

message DeviceInfo {
    string ID = 1700;
    string Type = 1701;
    string Manufacturer = 1702;
    int32 PowerComsuption = 1703;
    int32 ShipmentAt = 1704;
}

message GoodInfo {
    string ID = 2400;
    string DeviceInfoID = 2401;
    bool SeparateFee = 2403;
    int32 UnitPower = 2404;
    int32 DurationDays = 2405;
    string CoinInfoID = 2406;
    bool Actuals = 2407;
    uint32 DeliveryAt = 2408;
    string InheritFromGoodID = 2409;
    string VendorLocationID = 2410;
    double Price = 2411;
    string BenefitType = 2412;
    bool Classic = 2413;
    repeated string SupportCoinTypeIDs = 2414;
    int32 Total = 2415;
    string PriceCurrency = 2416;
    string Title = 2417;
    string Unit = 2418;
}

message PriceCurrency {
    string ID = 3010;
    string Name = 3011;
    string Unit = 3012;
    string Symbol = 3013;
}

message CoinInfo {
    string ID = 3020;
    bool PreSale = 3021;
    string Name = 3022;
    string Unit = 3023;
    string Logo = 3024;
}

message GoodDetail {
    string ID = 2400;
    DeviceInfo DeviceInfo = 2401;
    bool SeparateFee = 2403;
    int32 UnitPower = 2404;
    int32 DurationDays = 2405;
    CoinInfo CoinInfo = 2406;
    bool Actuals = 2407;
    uint32 DeliveryAt = 2408;
    GoodInfo InheritFromGood = 2409;
    VendorLocationInfo VendorLocation = 2410;
    double Price = 2411;
    string BenefitType = 2412;
    bool Classic = 2413;
    repeated CoinInfo SupportCoins = 2414;
    int32 Total = 2415;
    GoodExtraInfo Extra = 2416;
    string Title = 2417;
    string Unit = 2418;
    PriceCurrency PriceCurrency = 2420;
    repeated Fee Fees = 2421;
}

message GetGoodDetailRequest {
    string ID = 1;
}

message GetGoodDetailResponse {
    GoodDetail Detail = 1;
}


message GetGoodsDetailRequest {
    string AppID = 3210;
    PageInfo PageInfo = 3211;
}

message GetGoodsDetailResponse {
    repeated GoodDetail Details = 3212;
    int32 Total = 3213;
}

message GetRecommendGoodsDetailByAppRequest {
    string AppID = 3210;
}

message Recommend {
    string ID = 10;
    string AppID = 20;
    string GoodID = 30;
    string RecommenderID = 40;
    string Message = 50;
}

message RecommendGood {
    Recommend Recommend = 10;
    GoodDetail Good = 20;
}

message GetRecommendGoodsDetailByAppResponse {
    repeated RecommendGood Details = 3212;
}

message GoodExtraInfo {
    string ID = 5100;
    string GoodID = 5101;
    repeated string Posters = 5102;
    repeated string Labels = 5103;
    bool OutSale = 5104;
    bool PreSale = 5105;
    uint32 VoteCount = 5106;
    float Rating = 5107;
}

//------------------------------------------------------------------------------

message GoodPaying {
    string ID = 200;
    string OrderID = 201;
    string PaymentID = 202;
}

message GasPaying {
    string ID = 700;
    string OrderID = 701;
    string PaymentID = 702;
    uint32 DurationMinutes = 703;
}

message Compensate {
    string ID = 2610;
    string OrderID = 2611;
    uint32 Start = 2612;
    uint32 End = 2613;
    string Message = 2614;
}

message OutOfGas {
    string ID = 2610;
    string OrderID = 2611;
    uint32 Start = 2612;
    uint32 End = 2613;
}

message Account {
    string ID = 200;
    string CoinTypeID = 201;
    string Address = 202;
    string AppID = 206;
    string UserID = 207;
}

message Payment {
    string ID = 110;
    string OrderID = 111;
    Account Account = 112;
    double Amount = 113;
    CoinInfo CoinInfo = 114;
    string State = 115;
    string ChainTransactionID = 116;
    string PlatformTransactionID = 117;
}

message CouponPool {
    string ID = 4600;
    string AppID = 4601;
    double Denomination = 4603;
    uint32 Start = 4605;
    int32 DurationDays = 4606;
    string Message = 4607;
    string Name = 4608;
}

message Coupon {
    string ID = 3600;
    string UserID = 3601;
    string AppID = 3602;
    CouponPool Pool = 3604;
}

message DiscountPool {
    string ID = 4600;
    string AppID = 4601;
    string ReleaseByUserID = 4602;
    uint32 Discount = 4604;
    uint32 Start = 4605;
    int32 DurationDays = 4606;
    string Message = 4607;
    string Name = 4608;
}

message Discount {
    string ID = 3600;
    string UserID = 3601;
    string AppID = 3602;
    DiscountPool Pool = 3604;
}

message UserSpecialReduction {
    string ID = 1;
    string AppID = 2;
    string UserID = 3;
    double Amount = 4;
    string ReleaseByUserID = 5;
    uint32 Start = 6;
    int32 DurationDays = 7;
    string Message = 8;
}

message GoodFee {
    string ID = 1;
    string FeeType = 4;
    string FeeDescription = 5;
    string PayType = 6;
}

message Fee {
    string ID = 1;
    string AppID = 2;
    GoodFee Fee = 3;
    double Value = 4;
}

message OrderDetail {
    string ID = 2700;
    GoodDetail Good = 2701;
    string AppID = 2702;
    string UserID = 2703;
    uint32 Units = 2704;
    Discount DiscountCoupon = 2705;
    UserSpecialReduction UserSpecialReduction = 2706;
    GoodPaying GoodPaying = 2708;
    repeated GasPaying GasPayings = 2709;
    repeated Compensate Compensates = 2710;
    repeated OutOfGas OutOfGases = 2711;
    Payment Payment = 2712;
    uint32 Start = 2713;
    uint32 End = 2714;
    Coupon Coupon = 2715;
    uint32 Discount = 2716;
    double SpecialReductionAmount = 2717;
}

message GetOrderDetailRequest {
    string ID = 2800;
}

message GetOrderDetailResponse {
    OrderDetail Detail = 2900;
}

message GetOrdersDetailByAppUserRequest {
    string AppID = 3000;
    string UserID = 3001;
}

message GetOrdersDetailByAppUserResponse {
    repeated OrderDetail Details = 3100;
}

message GetOrdersDetailByAppRequest {
    string AppID = 3200;
}

message GetOrdersDetailByAppResponse {
    repeated OrderDetail Details = 3300;
}

message GetOrdersDetailByGoodRequest {
    string GoodID = 3400;
}

message GetOrdersDetailByGoodResponse {
    repeated OrderDetail Details = 3500;
}

message OrderFee {
    string ID = 3510;
    uint32 DurationDays = 3503;
}

message SubmitOrderRequest {
    string GoodID = 3600;
    uint32 Units = 3601;
    string UserID = 3602;
    string AppID = 3603;
    string CouponID = 3606;
    string DiscountCouponID = 3607;
    string UserSpecialReductionID = 3608;
}

message Order {
    string ID = 1400;
    string GoodID = 1401;
    string AppID = 1402;
    string UserID = 1403;
    uint32 Units = 1404;
    string DiscountCouponID = 1405;
    string UserSpecialReductionID = 1406;
    uint32 Start = 1407;
    uint32 End = 1408;
    string CouponID = 1409;
}

message SubmitOrderResponse {
    Order Info = 3700;
}

message CreateOrderPaymentRequest {
    string OrderID = 1;
    string PaymentCoinTypeID = 2;
    repeated OrderFee Fees = 3;
}

message CreateOrderPaymentResponse {
    OrderDetail Info = 1;
}

message SignupRequest {
    string Username = 1;
    string Password = 2;
    string EmailAddress = 3;
    string PhoneNumber = 4;
    string VerificationCode = 5;
    string AppID = 6;
    string InvitationCode = 7;
}

message UserInfo {
    string UserID = 1;
    string Username = 2;
    string Password = 15;
    string Avatar = 3;
    uint32 Age = 4;
    string Gender = 5;
    string Region = 6;
    string Birthday = 7;
    string Country = 8;
    string Province = 9;
    string City = 10;
    string PhoneNumber = 11;
    string EmailAddress = 12;
    uint32 CreateAt = 13;
    uint32 UpdateAt = 14;
    uint32 LoginTimes = 19;
    bool KycVerify = 16;
    bool GaVerify = 17;
    bool GaLogin = 22;
    string SignupMethod = 18;
    string Career = 20;
    string DisplayName = 21;
    string FirstName = 23;
    string LastName = 24;
    string StreetAddress1 = 25;
    string StreetAddress2 = 26;
}

message SignupResponse {
    UserInfo Info = 1;
}

message InvitationSummary {
    uint32 Units = 10;
    double Amount = 20;
}

message InvitationUserInfo {
    string UserID = 1;
    string Username = 2;
    string Avatar = 3;
    string EmailAddress = 4;
    bool Kol = 5;
    map<string, InvitationSummary> Summarys = 6;
    map<string, InvitationSummary> MySummarys = 7;
    uint32 InvitedCount = 8;
    uint32 JoinDate = 9;
}

message Invitation {
    repeated InvitationUserInfo Invitees = 1;
}

message GetMyInvitationsRequest {
    string AppID = 1;
    string InviterID = 2;
}

message GetMyInvitationsResponse {
    InvitationUserInfo MySelf = 1;
    map<string, Invitation> Infos = 2;
}

message GetMyDirectInvitationsRequest {
    string AppID = 1;
    string InviterID = 2;
}

message GetMyDirectInvitationsResponse {
    InvitationUserInfo MySelf = 1;
    map<string, Invitation> Infos = 2;
}

message Review {
    string ID = 10;
    string ObjectType = 20;
    string AppID = 30;
    string ReviewerID = 40;
    string State = 50;
    string Message = 60;
    string ObjectID = 70;
    string Domain = 80;
}

message KycReview {
    Review Review = 10;
}

message GetKycReviewsRequest {
    string AppID = 10;
}

message GetKycReviewsResponse {
    repeated  KycReview Infos = 10;
}

message GoodReview {
    Review Review = 10;
    UserInfo User = 20;
    GoodDetail Good = 30;
}

message GetGoodReviewsRequest {
}

message GetGoodReviewsResponse {
    repeated GoodReview Infos = 10;
}

